var int TeamDamageTaken,
        EnemyStaminaDamageDealt,
        TeamStaminaDamageDealt,
        EnemyStaminaDamageTaken,
        TeamStaminaDamageTaken,
        Feints,
        LightShoveHits,
        HeavyShoveHits,
        Parries,
        Blocks;


replication
{
    if (bNetDirty && bNetOwner)
        TeamDamageTaken, EnemyStaminaDamageDealt, TeamStaminaDamageDealt, EnemyStaminaDamageTaken, TeamStaminaDamageTaken,
        Feints, LightShoveHits, HeavyShoveHits, Parries, Blocks;
}


function PreSeamlessTravelReset()
{
    super.PreSeamlessTravelReset();

    TeamDamageTaken = 0;
    EnemyStaminaDamageDealt = 0;
    TeamStaminaDamageDealt = 0;
    EnemyStaminaDamageTaken = 0;
    TeamStaminaDamageTaken = 0;
    Feints = 0;
    LightShoveHits = 0;
    HeavyShoveHits = 0;
    Parries = 0;
    Blocks = 0;
}

function CopyProperties(PlayerReplicationInfo PRI)
{
    super.CopyProperties(PRI);

    AOCPRI(PRI).bAdmin = bAdmin;

    `{GAMEMODE}PRI(PRI).TeamDamageTaken = TeamDamageTaken;
    `{GAMEMODE}PRI(PRI).EnemyStaminaDamageDealt = EnemyStaminaDamageDealt;
    `{GAMEMODE}PRI(PRI).TeamStaminaDamageDealt = TeamStaminaDamageDealt;
    `{GAMEMODE}PRI(PRI).EnemyStaminaDamageTaken = EnemyStaminaDamageTaken;
    `{GAMEMODE}PRI(PRI).TeamStaminaDamageTaken = TeamStaminaDamageTaken;
    `{GAMEMODE}PRI(PRI).Feints = Feints;
    `{GAMEMODE}PRI(PRI).LightShoveHits = LightShoveHits;
    `{GAMEMODE}PRI(PRI).HeavyShoveHits = HeavyShoveHits;
    `{GAMEMODE}PRI(PRI).Parries = Parries;
    `{GAMEMODE}PRI(PRI).Blocks = Blocks;
}
